{{ $dyn := include "_dynamic/dyn_config.json" | mustFromJson -}}
{{ $dyn.greeting }},
you are using {{ $dyn.config_name }} dotfiles configuration.

# This file is automatically generated by your dotfiles
# It gives you an overview of your dotfiles' dynamic template data

# When you run `chezmoi apply`,
# `_dynamic/configurator.py` reads a given static .json
# file (e.g. one from the _dynamic/ folder)
# and processes or updates the data in it.
# The result is then written to _dynamic/dyn_config.json
# The chezmoi template files then read the values from the dyn_config.json

# This is an overview of all the current values from dyn_config.json
edit.command = {{ $dyn.edit.command | quote }}
edit.args = {{ $dyn.edit.args }}
age.identity = {{ $dyn.age.identity | quote }}
age.recipient = {{ $dyn.age.recipient | quote }}
environments_path = {{ $dyn.env | quote }}
src_path = {{ $dyn.src | quote }}
bootstrap_path = {{ $dyn.bootstrap_path | quote }}


# Debug: This is what your chezmoi config looks like:

# This configuration file is managed by chezmoi and compared with the source state
# To edit this, you need to edit .chezmoi.toml.tmpl in your dotfiles repository
{{ $dyn := include "_dynamic/dyn_config.json" | mustFromJson -}}
encryption = "age"

[edit]
	command = {{ $dyn.edit.command | quote }}
	args = {{ $dyn.edit.args }}

[age]
	identity = {{ $dyn.age.identity | quote }}
	recipient = {{ $dyn.age.recipient | quote }}

[data]
	# Only static data defined in `chezmoi.toml.tmpl`
	# are listed here.
	#
	# Dynamic data are generated by _dynamic/configurator.py, dumped into _dynamic/dyn_config.json
	# and are rendered for your convenience in dynamic_data.txt
	# 
	# You can switch to another dynamic configuration by changing the value
	# in your .chezmoidata in you home directory and running `chezmoi apply`.
	# When before applying, chezmoi will generate a new dyn_config.json and
	# recalculate any .tmpl files.
	# 
	# The .tmpl files are reading the dynamic data directly from dyn_config.json
	# by having `$dyn := include "_dynamic/dyn_config.json | mustFromJson -` in the 
	# template double braces.
